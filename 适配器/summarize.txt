一.基本理论
1.客户端：调用接口的类
2.适配器：连接客户端和调用提供服务的接口的类
3.适配者：提供服务，却与客户端接口不兼容
二. 适配器一般应用在业务逻辑代码与我使用的服务接口不匹配情况下，这种不匹配包括函数特征，参数不匹配等一些情况.这种模式并不会在设计的时候进行有意的创建，而是由于需求变更带来了这种模式的使用。
三.适合使用适配器的情况
1.使用一个已经存在的对象，但其方法或属性接口不符合你的要求；
2.创建一个可复用的对象，该对象可以与接口方法或属性不兼容的对象协同工作；
3.想使用已经存在的对象，但是不能对每一个都进行原型继承以匹配它的接口。对象适配器可以适配它的父对象接口方法或属性。
四.适配器与桥接模式的区别
桥接模式：接口与实现部分分离，更容易相对独立的改变。
适配器：强调改变已有对象的接口。
五.适配器与装饰者的区别
装饰者模式：增强对象的功能，不改变接口对程序的透明性更好。
六.适配器与代理模式的区别
代理模式：代理模式在不改变它的接口的条件下，为另外一个对象定义了一个代理。